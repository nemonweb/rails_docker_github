name: Continuous integration
on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:9.6
        ports: ["5432:5432"]
        env:
          POSTGRES_DB: myapp_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: example
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v1

      - name: Set up Ruby 2.6
        uses: actions/setup-ruby@v1
        with:
          ruby-version: 2.7.0

      - name: Install PostgreSQL client
        run: |
          sudo apt-get -yqq install libpq-dev

      - name: Cache Ruby gems
        uses: actions/cache@v1
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gem-

      - name: Bundle gems
        run: |
          gem install bundler
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3 --without production development

      - name: Create extension
        run: |
          export PGPASSWORD=example; psql -v ON_ERROR_STOP=1 --host 127.0.0.1 --username postgres --dbname=myapp_test -c 'CREATE EXTENSION IF NOT EXISTS "uuid-ossp";'
      - name: Run Tests
        env:
          DB_HOST: 127.0.0.1
          DB_USER: postgres
          DB_PASSWORD: example
          RAILS_ENV: test
        run: |
          bundle exec rake db:create db:schema:load
          bundle exec rake spec
